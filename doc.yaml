swagger: '2.0'
info:
  version: 1.0.0
  title: API Estudante TI
  description: API para consumo de produtos desenvolvidos. Sua principal funcionalidade é fornecer acesso para visualização e persistencia de artigos.
    Também incluso funcionalidades de persistencia de usuários, temas e categorias.
  contact:
    name: Allan Wanderley Alves
    email: awallan259@gmail.com
    url: 'http://allanalves23.top/contact'
  license:
    name: SELF FUNDING
    url: 'http://allanalves23.top/licenses#SELF-FUNDING'
schemes: 
  - http
produces: 
  - application/json
paths:
  /articles:
    get:
      summary: Listagem de artigos / Listagem de artigos por filtragem
      description: |
        Este endpoint retorna a listagem dos artigos. Possui limite de resultados e possui implementação de páginação
            Devolve a quantidade de artigos existentes pelos filtros de pesquisa
            E os artigos páginados de acordo com página desejada.
      parameters:
        - name: query
          in: query
          description: Realiza a busca filtrando artigos que **contenham** a palavra pesquisada em seu **titulo** ou **Curta descrição**
          required: false
          default: string vazia
          type: string
        - name: page
          in: query
          description: Informa a página desejada para listagem dos artigos
          required: true
          default: 1
          type: integer
        - name: limit
          in: query
          description: | 
            Informa a quantidade de usuários por página que serão exibidos.
            O máximo de registros permitidos são 100, **excendendo o limite o valor
            padrão será assumido**.
          required: true
          default: 10
          type: integer
      tags: 
        - articles
      responses:
        200:
          description: Um Array de artigos
          schema:
            type: array
            items:
              $ref: '#/definitions/Article'  
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
    post:
      summary: Cria um artigo
      description: Este endpoint persiste um novo artigo.
      parameters:
        - name: article
          in: body
          description: Artigo a ser persistido, não é necessário informar o artigo dentro um atributo "article", basta incluir as informações desestruturadas no corpo da requisição
          required: true
          schema:
              $ref: '#/definitions/ArticleInput'
      tags: 
        - articles
      responses:
        201:
          description: Um objeto contendo informações sobre o artigo persistido.
          schema:
              $ref: '#/definitions/Article'
        400:
          description: Um erro informando qual foi a operação inválida
          schema:
              $ref: '#/definitions/BadRequestResponse'  
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
  /articles/:url:
    get:
      summary: Lista apenas um artigo
      description: Este endpoint retorna um artigo pela url customizada.
      parameters:
        - name: url
          in: path
          description: URL customizada do artigo
          required: true
          type: string
      tags: 
        - articles/:url
      responses:
        200:
          description: Um objeto contendo as informações do artigo
          schema:
              $ref: '#/definitions/Article'
        404:
          description: Uma mensagem de artigo não encontrado
          schema:
            $ref: '#/definitions/NotFoundResponse'
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
  /articles/management/:id:
    get:
      summary: Lista apenas um artigo (pelo ID)
      description: |
        Este endpoint retorna um artigo pelo ID.
      parameters:
        - name: ID
          in: path
          description: ID do artigo
          required: true
          type: string
      tags: 
        - articles/management/:id
      responses:
        200:
          description: Um objeto contendo informações sobre o artigo.
          schema:
              $ref: '#/definitions/Article'
        404:
          description: Um erro informando que o artigo não foi encontrado
          schema:
              $ref: '#/definitions/NotFoundResponse'
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
    patch:
      summary: Altera as flags de configuração do artigo
      description: | 
        Este endpoint o status de um determinado artigo.
        Dentre as opções estão:
          - Publicar artigos -> Somente é possível publicar artigos que não estejam setados em true em nenhum dos estados abaixo.
          - Remover artigos -> Somente é possível remover artigos não publicados.
          - Inativar artigos -> Somente é possível inativar artigos publicados.
          - Reativar artigos -> Somente é possível reativar artigos que estejam. inativados.
          - Impulsionar artigos -> Somente é possível impulsionar artigos que estejam publicados.
      parameters:
        - name: id
          in: path
          description: ID do artigo
          required: true
          type: string
        - name: op
          in: query
          description: Operação a ser realizada
          required: true
          type: string
          enum:
            - publish
            - boost
            - active
            - inactive
      tags: 
        - articles/management/:id
      responses:
        200:
          description: Um objeto contendo informações sobre o artigo
          schema:
              $ref: '#/definitions/Article'
        400:
          description: Um erro informando qual foi a operação inválida
          schema:
              $ref: '#/definitions/BadRequestResponse'
        404:
          description: Um erro informando que o artigo não foi encontrado
          schema:
              $ref: '#/definitions/NotFoundResponse'
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
    delete:
      summary: Remove um artigo
      description: |
        Este endpoint remove um artigo.
      parameters:
        - name: id
          in: path
          description: ID do artigo a ser removido
          required: true
          type: string
      tags: 
        - articles/management/:id
      responses:
        204:
          description: Sucesso na remoção do artigo
        404:
          description: Um erro informando que o artigo não foi encontrado
          schema:
              $ref: '#/definitions/NotFoundResponse'
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
  /users:
    get:
      summary: Listagem de usuários / Listagem de usuarios por filtragem
      description: |
        Este endpoint retorna a listagem dos usuários. Possui limite de resultados e possui implementação de páginação
            Devolve a quantidade de usuários existentes pelos filtros de pesquisa
            E os usuários páginados de acordo com página desejada.
      parameters:
        - name: query
          in: query
          description: Realiza a busca filtrando usuários que **contenham** a palavra pesquisada em seu **nome**, gênero, cpf, telefone ou celular**
          required: false
          default: string vazia
          type: string
        - name: page
          in: query
          description: Informa a página desejada para listagem dos usuários
          required: true
          default: 1
          type: integer
        - name: limit
          in: query
          description: | 
            Informa a quantidade de usuários por página que serão exibidos.
            O máximo de registros permitidos são 100, **excendendo o limite o valor
            padrão será assumido**.
          required: true
          default: 10
          type: integer
      tags: 
        - users
      responses:
        200:
          description: Um Array de usuários
          schema:
            type: array
            items:
              $ref: '#/definitions/User'  
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
    post:
      summary: Cria um usuário
      description: Este endpoint persiste um novo usuário.
      parameters:
        - name: user
          in: body
          description: Usuário a ser persistido, não é necessário informar o usuário dentro um atributo "user", basta incluir as informações desestruturadas no corpo da requisição
          required: true
          schema:
              $ref: '#/definitions/UserInput'
      tags: 
        - users
      responses:
        201:
          description: Um objeto contendo informações sobre o usuário persistido.
          schema:
              $ref: '#/definitions/User'
        400:
          description: Um erro informando qual foi a operação inválida
          schema:
              $ref: '#/definitions/BadRequestResponse'  
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
    patch:
      summary: Altera a senha de um usuário
      description: | 
        Este endpoint altera senha de um usuário, usuários administradores poderão alterar a senha de qualquer outro usuário.
        Autores poderão somente alterar sua própria senha.
      parameters:
        - name: user
          in: body
          required: true
          schema: 
            $ref: '#/definitions/UserChangePassword'
      tags: 
        - users
      responses:
        204:
          description: Operação realizada com sucesso
        401:
          description: Acesso negado, irá ocorrer quando o critério mencionado na descrição não for atendido
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
  /users/:id:
    get:
      summary: Lista apenas um usuário (pelo ID)
      description: |
        Este endpoint retorna um usuário pelo ID
      parameters:
        - name: id
          in: path
          description: ID do usuário
          required: true
          type: string
      tags: 
        - users/:id
      responses:
        200:
          description: Um usuário
          schema:
              $ref: '#/definitions/User'
        404:
          description: Usuário não encontrado
          schema:
              $ref: '#/definitions/NotFoundResponse'
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
    put:
      summary: Altera um usuário
      description: Este endpoint altera um usuário.
      parameters:
        - name: id
          in: path
          description: ID do usuário
          required: true
          type: string
        - name: user
          in: body
          description: Usuário a ser alterado, não é necessário informar o usuário dentro um atributo "user", basta incluir as informações desestruturadas no corpo da requisição
          required: true
          schema:
              $ref: '#/definitions/UserInput'
      tags: 
        - users/:id
      responses:
        204:
          description: Operação realizada com sucesso
        400:
          description: Um erro informando qual foi a operação inválida
          schema:
              $ref: '#/definitions/BadRequestResponse'  
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
    patch:
      summary: Altera as demais informações do usuário
      description: | 
        Este endpoint altera algumas informações de um usuário.
        Um exemplo de uso é pertinente a alterações de redes sociais e demais informações. Para verificar quais as possibilidades, consulte o schema do banco de dados da aplicação.
      parameters:
        - name: user
          in: body
          required: true
          schema: 
            $ref: '#/definitions/UserChangePassword'
      tags: 
        - users/:id
      responses:
        204:
          description: Operação realizada com sucesso
        404:
          description: Usuário não encontrado
          schema:
              $ref: '#/definitions/NotFoundResponse'
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
    delete:
      summary: Remove um usuário
      description: | 
        Este endpoint remove um usuário. Usuários administradores poderão remover  qualquer outro usuário.
        Autores poderão somente remover sua própria conta.
      parameters:
        - name: id
          description: ID do usuário a ser removido. 
          in: path
          required: true
          type: string
      tags: 
        - users/:id
      responses:
        204:
          description: Operação realizada com sucesso
        401:
          description: Acesso negado, irá ocorrer quando o critério mencionado na descrição não for atendido
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
  /themes:
    get:
      summary: Listagem de temas / Listagem de temas por filtragem
      description: |
        Este endpoint retorna a listagem dos temas. Possui limite de resultados e possui implementação de páginação
            Devolve a quantidade de temas existentes pelos filtros de pesquisa
            E os temas de acordo com página desejada.
      parameters:
        - name: query
          in: query
          description: Realiza a busca filtrando temas que **contenham** a palavra pesquisada em seu **nome** ou **apelido**
          required: false
          default: string vazia
          type: string
        - name: page
          in: query
          description: Informa a página desejada para listagem dos temas
          required: true
          default: 1
          type: integer
        - name: limit
          in: query
          description: | 
            Informa a quantidade de temas por página que serão exibidos.
            O máximo de registros permitidos são 100, **excendendo o limite o valor
            padrão será assumido**.
          required: true
          default: 10
          type: integer
      tags: 
        - themes
      responses:
        200:
          description: Um Array de temas
          schema:
            type: array
            items:
              $ref: '#/definitions/Theme'  
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
    post:
      summary: Cria um tema
      description: Este endpoint persiste um novo tema.
      parameters:
        - name: theme
          in: body
          description: Tema a ser persistido, não é necessário informar o tema dentro um atributo "theme", basta incluir as informações desestruturadas no corpo da requisição
          required: true
          schema:
              $ref: '#/definitions/ThemeInput'
      tags: 
        - themes
      responses:
        201:
          description: Um objeto contendo informações sobre o tema persistido.
          schema:
              $ref: '#/definitions/Theme'
        400:
          description: Um erro informando qual foi a operação inválida
          schema:
              $ref: '#/definitions/BadRequestResponse'  
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
  /themes/:id:
    get:
      summary: Lista apenas um tema (pelo ID)
      description: |
        Este endpoint retorna um tema pelo ID
      parameters:
        - name: id
          in: path
          description: ID do tema
          required: true
          type: string
      tags: 
        - themes/:id
      responses:
        200:
          description: Um tema
          schema:
              $ref: '#/definitions/Theme'
        404:
          description: Tema não encontrado
          schema:
              $ref: '#/definitions/NotFoundResponse'
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
    put:
      summary: Altera um tema
      description: Este endpoint altera um tema.
      parameters:
        - name: id
          in: path
          description: ID do tema
          required: true
          type: string
        - name: theme
          in: body
          description: Tema a ser alterado, não é necessário informar o tema dentro um atributo "theme", basta incluir as informações desestruturadas no corpo da requisição
          required: true
          schema:
              $ref: '#/definitions/ThemeInput'
      tags: 
        - themes/:id
      responses:
        204:
          description: Operação realizada com sucesso
        400:
          description: Um erro informando qual foi a operação inválida
          schema:
              $ref: '#/definitions/BadRequestResponse'  
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
    delete:
      summary: Remove um tema
      description: | 
        Este endpoint remove um tema. Usuários administradores podem remover  quaisquer temas.
        Autores não possuem acesso a esta funcionalidade.
      parameters:
        - name: id
          description: ID do tema a ser removido. 
          in: path
          required: true
          type: string
      tags: 
        - themes/:id
      responses:
        204:
          description: Operação realizada com sucesso
        401:
          description: Acesso negado, irá ocorrer quando o critério mencionado na descrição não for atendido
        404:
          description: Tema não encontrado
          schema:
            $ref: '#/definitions/NotFoundResponse'
        410:
          description: Tema já removido
          schema:
            $ref: '#/definitions/GoneResponse'
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
  /categories:
    get:
      summary: Listagem de categorias / Listagem de categorias por filtragem
      description: |
        Este endpoint retorna a listagem dos categorias. Possui limite de resultados e possui implementação de páginação
            Devolve a quantidade de categorias existentes pelos filtros de pesquisa
            E as categorias de acordo com página desejada.
      parameters:
        - name: query
          in: query
          description: Realiza a busca filtrando categorias que **contenham** a palavra pesquisada em seu **nome** ou **apelido**
          required: false
          default: string vazia
          type: string
        - name: page
          in: query
          description: Informa a página desejada para listagem das categorias
          required: true
          default: 1
          type: integer
        - name: limit
          in: query
          description: | 
            Informa a quantidade de categorias por página que serão exibidos.
            O máximo de registros permitidos são 100, **excendendo o limite o valor
            padrão será assumido**.
          required: true
          default: 10
          type: integer
      tags: 
        - categories
      responses:
        200:
          description: Um Array de categorias
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'  
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
    post:
      summary: Cria uma categoria
      description: Este endpoint persiste uma nova categoria.
      parameters:
        - name: category
          in: body
          description: Categorias a ser persistida, não é necessário informar a categoria dentro um atributo "category", basta incluir as informações desestruturadas no corpo da requisição
          required: true
          schema:
              $ref: '#/definitions/CategoryInput'
      tags: 
        - categories
      responses:
        201:
          description: Um objeto contendo informações sobre a categoria persistida.
          schema:
              $ref: '#/definitions/Category'
        400:
          description: Um erro informando qual foi a operação inválida
          schema:
              $ref: '#/definitions/BadRequestResponse'  
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
  /categories/:id:
    get:
      summary: Lista apenas uma categoria (pelo ID)
      description: |
        Este endpoint retorna uma categoria pelo ID
      parameters:
        - name: id
          in: path
          description: ID da categoria
          required: true
          type: string
      tags: 
        - categories/:id
      responses:
        200:
          description: Uma categoria
          schema:
              $ref: '#/definitions/Category'
        404:
          description: Categoria não encontrada
          schema:
              $ref: '#/definitions/NotFoundResponse'
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
    put:
      summary: Altera uma categoria
      description: Este endpoint altera uma categoria.
      parameters:
        - name: id
          in: path
          description: ID da categoria
          required: true
          type: string
        - name: category
          in: body
          description: Categoria a ser alterado, não é necessário informar a categoria dentro um atributo "category", basta incluir as informações desestruturadas no corpo da requisição
          required: true
          schema:
              $ref: '#/definitions/CategoryInput'
      tags: 
        - categories/:id
      responses:
        204:
          description: Operação realizada com sucesso
        400:
          description: Um erro informando qual foi a operação inválida
          schema:
              $ref: '#/definitions/BadRequestResponse'  
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse'
    delete:
      summary: Remove uma categoria
      description: | 
        Este endpoint remove uma categoria. Usuários administradores podem remover  quaisquer categorias.
        Autores não possuem acesso a esta funcionalidade.
      parameters:
        - name: id
          description: ID da categoria a ser removida. 
          in: path
          required: true
          type: string
      tags: 
        - categories/:id
      responses:
        204:
          description: Operação realizada com sucesso
        401:
          description: Acesso negado, irá ocorrer quando o critério mencionado na descrição não for atendido
        404:
          description: Categoria não encontrada
          schema:
            $ref: '#/definitions/NotFoundResponse'
        410:
          description: Categoria já removida
          schema:
            $ref: '#/definitions/GoneResponse'
        500:
          description: Um erro inesperado
          schema:
              $ref: '#/definitions/DefaultErrorResponse' 
definitions:
  Article:
    type: object
    properties:
      _id:
        type: string
        description: Código identificador do artigo
      title:
        type: string
        description: Titulo do artigo
      theme:
        type: object
        description: Tema do artigo'
      customURL:
        type: string
        description: url customizada para acesso ao artigo
      author:
        type: object
        description: Autor do artigo
      shortDescription:
        type: string
        description: Breve descrição do artigo
      textArticle:
        type: string
        description: O corpo do artigo
      createdAt:
        type: object
        title: Data de criação do artigo | Leia a descrição
        description: Object = Tipo Date na sua Linguagem
      published:
        type: boolean
        description: Flag para indicar se o artigo está ou não publicado
      boosted:
        type: boolean
        description: Flag para indicar se o artigo está ou não impulsionado
      deleted:
        type: boolean
        description: Flag para indicar se o artigo está ou não excluído
      inactivated:
        type: boolean
        description: Flag para indicar se o artigo está ou não inativo
      smallImg:
        type: string
        description: Aponta o path da imagem deste artigo
      bigImg:
        type: string
        description: Aponta o path da imagem deste artigo
  ArticleInput:
    type: object
    properties:
      _id:
        type: string
        description: Código identificador do artigo
        readOnly: true
        title: Obrigatório somente método PUT, para método POST deverá ser SEMPRE descartado
      title:
        type: string
        exclusiveMaximum: true
        description: Titulo do artigo
      theme:
        type: object
        exclusiveMaximum: true
        description: Tema do artigo
      category:
        type: object
        description: Categoria do artigo
      customURL:
        type: string
        title: Deverá ser aplicado uma função para deixar a frase em caixa baixa e trocar os separadores (spaces) por - (hífen)
        description: url customizada para acesso ao artigo
        default: O titulo do artigo
      author:
        type: object
        exclusiveMaximum: true
        description: Autor do artigo
      shortDescription:
        type: string
        exclusiveMaximum: true
        description: Breve descrição do artigo
      longDescription:
        type: string
        description: Uma descrição do artigo mais detalhada
      textArticle:
        type: string
        exclusiveMaximum: true
        description: O corpo do artigo
  User: 
    type: object
    description: O usuário
    properties:
      _id:
        type: string
        description: ID do usuário
        example: '5d1149d86c15d03183e77e87'
      name:
        type: string
        description: Nome do usuário
        example: Allan
      email:
        type: string
        description: | 
          E-mail do usuário, o e-mail do usuário deverá ter o formato:
            <usuario>@<nome-do-dominio>.<dominio>
          example: user@gmail.com
      gender:
        type: string
        description: | 
          Define o genero do usuário. Somente valores como: male, female ou undefined são permitidos
      tagAdmin:
        type: string
        description: Uma hash caso seja um usuário administrador do sistema, caso contrário será nulo.
        example: SsdCYdadamoFQHqxiAAuskQ==
      cpf:
        type: string
        description: CPF do usuário
        example: 123.456.789-10
      telphone:
        type: string
        description: Telefone do usuário
        example: (11)2222-3333
      celphone:
        type: string
        description: Celular do usuário
        example: (11)99999-8888
      birthDate: 
        type: object
        title: Data de nascimento | Leia a descrição
        description: Object = Tipo Date na sua Linguagem
      address:
        type: string
        description: Endereço da residência do usuário
        example: 9th Street
      number:
        type: integer
        description: Numeração da residência do usuário
        example: 123
      deleted:
        type: boolean
        description: Flag para indicar se o usuário está removido ou não
        example: false
  UserInput:
    type: object
    description: Um objeto contendo as informações do usuário a ser persistido
    properties:
      _id:
        type: string
        title: Obrigatório somente método PUT, para método POST deverá ser SEMPRE descartado
        description: | 
          ID do usuário. Necessário apenas para atualizar o usuário, Jamais poderá ser modificado, deverá ser enviado na requisição para atualizar o usuário.
        example: '<Obrigátorio para PUT - Descartado para POST>'
      name:
        type: string
        exclusiveMaximum: true
        description: Nome do usuário
        example: Allan
      email:
        type: string
        exclusiveMaximum: true
        description: | 
          E-mail do usuário, o e-mail do usuário deverá ter o formato:
            <usuario>@<nome-do-dominio>.<dominio>
          example: user@gmail.com
      gender:
        type: string
        exclusiveMaximum: true
        enum: 
          - male
          - female
          - undefined
        description: Define o genero do usuário.
      type:
        type: string
        exclusiveMaximum: true
        enum: 
         - admin
         - author
        description: Define nível de acesso do usuário.
      cpf:
        type: string
        exclusiveMaximum: true
        description: CPF do usuário
        example: 123.456.789-10
      telphone:
        type: string
        exclusiveMaximum: true
        description: Telefone do usuário
        example: (11)2222-3333
      celphone:
        type: string
        exclusiveMaximum: true
        description: Celular do usuário
        example: (11)99999-8888
      birthDate: 
        type: object
        title: Data de nascimento | Leia a descrição
        description: Object = Tipo Date na sua Linguagem
      address:
        type: string
        description: Endereço da residência do usuário
        example: 9th Street
      number:
        type: integer
        description: Numeração da residência do usuário
        example: 123
  Theme:
    type: object
    description: Um tema
    properties:
      _id:
        type: string
        description: ID do tema
        example: '5d1409e818251f4139bb3e0e'
      name:
        type: string
        description: Nome do tema
      alias:
        type: string
        description: Um 'apelido' para este tema, usado para realizar outras referencias a consultas
      description: 
        type: string
        description: Uma descrição mais aprofundada do tema
      state:
        type: string
        enum:
          - active
          - removed
        description: Define o status do tema
  ThemeInput:
    type: object
    description: Um tema que será cadastrado / atualizado
    properties:
      _id:
        type: string
        title: Obrigatório somente método PUT, para método POST deverá ser SEMPRE descartado
        description: ID do tema
        example: '5d1409e818251f4139bb3e0e'
      name:
        type: string
        description: Nome do tema
      alias:
        type: string
        description: Um 'apelido' para este tema, usado para realizar outras referencias a consultas
      description: 
        type: string
        description: Uma descrição mais aprofundada do tema
  Category:
    type: object
    description: Uma categoria
    properties:
      _id:
        type: string
        description: ID da categoria
        example: '5d1409e818251f4139bb3e0e'
      name:
        type: string
        description: Nome da categoria
      alias:
        type: string
        description: Um 'apelido' para esta categoria, usado para realizar outras referencias a consultas
      description: 
        type: string
        description: Uma descrição mais aprofundada
      state:
        type: string
        enum:
          - active
          - removed
        description: Define o status da categoria
  CategoryInput:
    type: object
    description: Uma categoria que será cadastrado / atualizado
    properties:
      _id:
        type: string
        title: Obrigatório somente método PUT, para método POST deverá ser SEMPRE descartado
        description: ID da categoria
        example: '5d1409e818251f4139bb3e0e'
      name:
        type: string
        description: Nome da categoria
      alias:
        type: string
        description: Um 'apelido' para esta categoria, usado para realizar outras referencias a consultas
      description: 
        type: string
        description: Uma descrição mais aprofundada
  UserChangePassword:
    type: object
    exclusiveMinimum: true
    properties:
      _id:
        type: string
        description: ID do usuário
        example: '5d1d7ea3d03c741e44135e87'
      password:
        type: string
        description: A nova senha do usuário
        minLength: 8
  BadRequestResponse:
    type: object
    description: Uma mensagem de erro que informará o erro por parte do usuário
    properties:
      code:
        type: integer
        description: Código do erro
        example: 400
      msg:
        type: string
        description: Mensagem de erro
        example: Operação inválida
  NotFoundResponse:
    type: object
    description: Uma mensagem de erro informando que tal recurso não foi encontrado
    properties:
      code:
        type: integer
        description: Código do erro
        example: 404
      msg:
        type: string
        description: Mensagem de erro
        example: Recurso não encontrado
  GoneResponse:
    type: object
    description: Uma mensagem de erro informando que tal recurso não está mais disponível
    properties:
      code:
        type: integer
        description: Código do erro
        example: 410
      msg:
        type: string
        description: Mensagem de erro
        example: Este recurso não esta mais disponível
  DefaultErrorResponse: 
    type: object
    description: Uma mensagem de erro inesperado
    properties:
      code:
        type: integer
        description: Código do erro
        example: 500
      msg:
        type: string
        description: Mensagem de erro
        example: Ocorreu um erro desconhecido, se persistir reporte
 
